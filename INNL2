public class Innl2exKode {
						//TABELLER
	// a)
		public static void skrivUt(int[] tabell1) {
			for (int num: tabell1) {
				System.out.print(num + " "); 
			}
			// TODO
			throw new UnsupportedOperationException("skrivUt ikke implementert");
		}

		// b)
		public static String tilStreng(int[] tabell1) {
			for (int num: tabell1) {
				System.out.print(num + " ");
			}	
			// TODO
			throw new UnsupportedOperationException("tilStreng ikke implementert");		
		}

		// c)
		public static int summer(int[] tabell1) {
			int sum = 0;
			//	for-løkke
			for (int i=0; i<4; i++)			
				sum += tabell1[i];
			System.out.println("Summen: " + sum);
			/*   While-løkke
			int i = 0;
			while(i<tabell3.length) {
				sum += tabell3[i];
				i++;
			System.out.print(sum + " ");	*/
			// TODO
			throw new UnsupportedOperationException("summer ikke implementert");
		}

		// d)
		public static boolean finnesTall(int[] tabell1, int tall) {
			int søkeTall = parseInt(showInputDialog("Gi tall(1-10): "));
			boolean funnet = false;
			int i = 0;
			while (!funnet && i<tabell1.length) {
				if (tabell1[i] == søkeTall)
					funnet = true;
				else
					i++;
			}
			if (funnet) {
				showMessageDialog(null, "Funnet!");
			}	
			else {
				showMessageDialog(null, "Ikkje funnet!");
			}
			// TODO
			throw new UnsupportedOperationException("finnesTall ikke implementert");
		}

		
		// e)
		public static int posisjonTall(int[] tabell1, int tall) {
			int index = -1;
		    for (int i = 0; (i < tabell1.length) && (index == -1); i++) {
		        if (tabell1[i] == '4') {
		            index = i;
		        }
		    }
		    System.out.println(index);
		    // TODO
			throw new UnsupportedOperationException("posisjonTall ikke implementert");
		}

		// f)
		public static int[] reverser(int[] tabell1) {
			for(int i=tabell1.length-1;i>=0;i--)
				  System.out.print(tabell1[i] + " ");
			// TODO
			throw new UnsupportedOperationException("reverser ikke implementert");	
		}

		
		// g)
		public static boolean erSortert(int[] tabell) {
			// TODO
			throw new UnsupportedOperationException("erSortert ikke implementert");
		}

		// h)
		public static int[] settSammen(int[] tabell1, int[] tabell2) {
			int sammensatt = tabell1.length + tabell2.length;
			int[] nyTab = new int[sammensatt];
			for (int i=0; i<tabell1.length; i ++) {
				nyTab[i] = tabell1[i];
			}
			for (int j=0; j<tabell2.length; j++) {
				nyTab[tabell1.length + j] = tabell2[j];
			}
			return nyTab;
			// TODO
			throw new UnsupportedOperationException("settSammen ikke implementert");
		}
	}







					//MATRISER
// a)
public static void skrivUt(int[][] a) {
	for (int i=0; i<a.length; i++) {
		for (int j=0; j<a.length; j++) {
			System.out.print(a[i][j] + " ");
		}
		System.out.println();
	}
	// TODO
	throw new UnsupportedOperationException("skrivUt ikke implementert");
}

// b)
public static String tilStreng(int[][] a) {
	for (int i=0; i<a.length; i++) {
		for (int j=0; j<a.length; j++) {
			System.out.print(a[i][j] + " ");
		}
		System.out.println();
	}
	// TODO
	throw new UnsupportedOperationException("tilStreng ikke implementert");
}

// c)
public static int[][] skaler(int tall, int[][] a) {
	int gangeTall = 2;
	for (int i=0; i<a.length; i++) {
		for (int j=0; j<a.length; j++) {
			a[i][j] = (int)(a[i][j] * gangeTall);
			System.out.print(a[i][j] + " ");
		}
		System.out.println();
	}
	// TODO
	throw new UnsupportedOperationException("skaler ikke implementert");
}

// d)
public static boolean erLik(int[][] a, int[][] b) {
	boolean sjekk = true;
	for (int i=0; i<a.length; i++) {
		for (int j=0; j<a[0].length; j++) {
			if (a[i][j] != b[i][j]) {
				sjekk = false;
				break;
			}
		}
	}
	if(sjekk)
		System.out.println("Matriser er like!");
	else
		System.out.println("Matriser er ikkje like!");
	// TODO
	throw new UnsupportedOperationException("erLik ikke implementert");
}

// e)
public static int[][] speile(int[][] matrise) {
	// TODO
	throw new UnsupportedOperationException("speile ikke implementert");
}

// f)
public static int[][] multipliser(int[][] a, int[][] b) {
int[][] multiplisert = new int[3][3];
	for (int i=0; i<3; i++) {
		for (int j=0; j<3; j++) {
			multiplisert[i][j] = 0;
			for (int k=0; k<3; k++) {
				multiplisert[i][j] += a[i][k] * b[k][j];
			}
			System.out.print(multiplisert[i][j] + " ");
		}
		System.out.println();
	// TODO
	throw new UnsupportedOperationException("multipliser ikke implementert");
	}
}
}
